# This file creates a digital ocean droplet, if it doesn't already exists.
# It creates a Digital Ocean Tag, an in-memory host entry for the droplet
# and it will create or update a hosts file for the droplet should it
# be rerun using the same droplet.

- hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - vars/vault.yml
    - vars/digital_ocean.yml

  tasks:
    - name: Destroy Digital Ocean Droplet
      digital_ocean_droplet:
        unique_name: true
        image: "{{ droplet_image }}"
        region: "{{ droplet_region }}"
        wait: true
        name: "{{ droplet_name }}"
        size_id: "{{ droplet_size_id }}"
        state: absent
        oauth_token: "{{ do_token }}"
        wait_timeout: 500
        # ssh_keys: ["{{ lookup('file', ssh_public_fingerprint_file) }}"]
      register: do
      notify:
        - Removed droplet


  handlers:
    # Note a single host can have two entries in the ssh known_hosts file if
    # the host was accessed by both net_hostname and ip address
    # on separate occaisions.
    - name: Remove host by net_hostname from ssh known_hosts file.
      lineinfile:
        path: ~/.ssh/known_hosts
        regex: "^{{ net_hostname }}"
        state: absent
      listen: Removed droplet

    - name: Remove host by ip address from ssh known_hosts file.
      lineinfile:
        path: ~/.ssh/known_hosts
        regex: "^{{ ansible_host }}"
        state: absent
      listen: Removed droplet

    - name: Remove entry from /etc/hosts file
      lineinfile:
        path: /etc/hosts
        regex: " {{ net_hostname }}"
        state: absent
      become: true
      failed_when: false
      listen: Removed droplet

    - name: Remove hosts file.
      file:
        path: "{{ inventory_file }}"
        state: absent
      listen: Removed droplet

    - name: Create empty hosts file.
      file:
        path: "{{ inventory_file }}"
        state: touch
        mode: 0644
      listen: Removed droplet
