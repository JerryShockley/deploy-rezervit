---
# This file creates a digital ocean droplet, if it doesn't already exists.
# It creates a Digital Ocean Tag, an in-memory host entry for the droplet
# and it will create or update a hosts file for the droplet should it
# be rerun using the same droplet.

- hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - vars/vault.yml
    - vars/digital_ocean.yml
    - vars/edit_inventory_file.yml

  tasks:
    - name: Create Digital Ocean Droplet
      community.digitalocean.digital_ocean_droplet:
        unique_name: true
        image: "{{ droplet_image }}"
        region: "{{ droplet_region }}"
        wait: true
        name: "{{ droplet_name }}"
        size_id: "{{ droplet_size_id }}"
        state: present
        oauth_token: "{{ do_token }}"
        wait_timeout: 500
        ssh_keys: ["{{ lookup('file', ssh_public_fingerprint_file) }}"]
      register: do
      notify: new droplet

    - ansible.builtin.debug:
        msg: >
          Droplet:

          ID is {{ do.data.droplet.id }},
          IP is {{ do.data.ip_address }}

    - name: Update ansible hosts file.
      include_tasks: edit_inventory_file.yml
      vars:
        host_user: root
        host_name: "{{ do.data.ip_address }}"
        host_file: "{{ inventory_file }}"

  handlers:
    - name: Add in-memory host for newly created droplet
      ansible.builtin.add_host:
        name: "{{ do.data.ip_address }}"
        ansible_user: root
      listen: new droplet
      # when: do.data is defined

    # - name: update system /etc/hosts file
    #   ansible.builtin.lineinfile:
    #     path: /etc/hosts
    #     regex: "{{ net_hostname }}"
    #     line: "{{ do.data.ip_address }} {{ net_hostname }}"
    #   become: true
    #   become_user: root
    #   listen: new droplet

    - name: create do tag.
      community.digitalocean.digital_ocean_tag:
        name: test-droplet-tag
        resource_id: "{{ do.data.droplet.id }}"
        state: present
        api_token: "{{ do_token }}"
      # for bug workaround on rerun failure.
      failed_when: false
      listen: new droplet

    - name: Waiting for droplet DNS to propagate
      ansible.builtin.pause:
        seconds: 30
      listen: new droplet
